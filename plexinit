#!/bin/sh
# plexinit.sh
# Created by: J.M Rivera
# Modified: 7/4/2016
# Provide: Plex Media Server
# Require: NAS4Free 10.x and later versions.
# Plex(c) (Plex Media Server) is a registered trademark of Plex(c), Inc.

# Determine current working directory.
CWDIR=$(dirname $(realpath $0))

# Global variables
PLATFORM=`uname -p`
PRODUCT=`uname -i`
PRDVERSION=`uname -r | cut -d. -f1`
PRDPLATFORM=`cat /etc/platform`
PKGCACHE="/var/cache/pkg"
PKGMETA="/var/db/pkg"
COMPAT9XPATH1="/usr/local/lib/compat"
COMPAT9XPATH2="/usr/local/lib32/compat"
COMPAT9XPATH3="/usr/local/libdata/ldconfig"
COMPAT9XPATH4="/usr/local/libdata/ldconfig32"
PLEXPATH="/usr/local/share/plexmediaserver"
PLEXRCD="/usr/local/etc/rc.d/plexmediaserver"
SUPPORTPATH="${CWDIR}/plexdata"
RCDPATH="/usr/local/etc/rc.d"
PHP="/usr/local/bin/php-cgi -f"
CONFIG="/cf/conf/config.xml"
PRDNAME="plexmediaserver"
CMDNAME="plexmediaserver"
COMPATPKG="compat9x-amd64"
SCRIPTNAME=`basename $0`
VERSION="4.0.05"

error_notify()
{
  # Log and notify message on error and exit.
  logger "${SCRIPTNAME}: an error has occurred during startup"
  echo -e "$*" >&2 ; exit 1
}

update_freebsdconf()
{
  # Replace old FreeBSD.conf to fetch latest packages.
  if [ -f /etc/pkg/FreeBSD.conf ]; then 
      /usr/bin/sed -e "s=quarterly=latest=" /etc/pkg/FreeBSD.conf > /etc/pkg/FreeBSD.conf~
      /bin/mv /etc/pkg/FreeBSD.conf~ /etc/pkg/FreeBSD.conf || error_notify "Error: A problem has occurred while copying file."
  fi
}

plex_initial_download()
{
  # Update FreeBSD.conf file.
  update_freebsdconf
  # Check if Plex already exist.
  if [ ! -f ${PLEXPATH}/Plex_Media_Server ]; then
	  # Fetch and install latest Plex pkg.
	  pkg install -y ${PRDNAME}
  fi
  # Backup latest plex rcd after install if embedded.
  if [ ${PRDPLATFORM} == "x64-embedded" ]; then
      if [ -f ${PLEXRCD} ]; then
          /bin/cp ${PLEXRCD} ${CWDIR}/system/rc.d || error_notify "Error: A problem has occurred while copying file."
      fi
  fi
}

pkg_upgrade()
{
  # Update FreeBSD.conf file.
  update_freebsdconf
  # Fetch and upgrade latest Plex pkg.
  pkg upgrade -y ${COMPATPKG} ${PRDNAME}
  # Backup latest plex rcd after upgrade if embedded.
  if [ ${PRDPLATFORM} == "x64-embedded" ]; then
      if [ -f ${PLEXRCD} ]; then
          /bin/cp ${PLEXRCD} ${CWDIR}/system/rc.d || error_notify "Error: A problem has occurred while copying file."
      fi
  fi
}

product_check()
{
  # Check for working product.
  if [ ${PRODUCT} == "NAS4FREE-x64" ]; then
      postinit_cmd
  fi
}

platform_check()
{
  # Check for working platform.
  if [ ${PRDPLATFORM} == "x64-embedded" ]; then
      pkg_symlinkdir
      compat9x_symlinkdir
      plex_symlinkdir
  fi
}

postinit_cmd()
{
  # Check and generate temporary php script for ezPlex postinit command.
  if ! /usr/bin/grep -q ${CWDIR}/plexinit ${CONFIG}; then
      /usr/bin/touch ${CWDIR}/postinit || error_notify "Error: A problem has occurred while creating file."
      /bin/chmod +x ${CWDIR}/postinit
#AFS down to the end of this function the changes for OBI       
      /bin/cat << EOF > ${CWDIR}/postinit
<?php
\$cmd = dirname(__FILE__)."/plexinit";
require_once("config.inc");
require_once("functions.inc");
        \$i =0;
		if ( is_array(\$config['rc']['postinit'] ) && is_array( \$config['rc']['postinit']['cmd'] ) ) {
            for (\$i; \$i < count(\$config['rc']['postinit']['cmd']);) {
                if (preg_match('/plexinit/', \$config['rc']['postinit']['cmd'][\$i])) break; ++\$i; }
        }
        \$config['rc']['postinit']['cmd'][\$i] = \$config['cmd']."\$cmd";
		write_config();
?>
EOF
      # Execute temporary php script.
#      ${PHP}/${CWDIR}/postinit && rm ${CWDIR}/postinit
      if [ "${GUISTART}" != "ON" ]; then 
        /usr/local/bin/php-cgi -f ${PHP}/${CWDIR}/postinit && rm ${CWDIR}/postinit
      else 
        cp -R gui/* /usr/local/www/
      fi
  fi
}

plex_usergroup()
{
  # Check and create plex user/group.
  if ! /usr/sbin/pw groupshow plex >/dev/null 2>&1; then
      /usr/sbin/pw groupadd plex -g 972 >/dev/null 2>&1
  fi
  if ! /usr/sbin/pw usershow plex >/dev/null 2>&1; then
      /usr/sbin/pw useradd plex -u 972 -g 972  -c "Plex Media Server" -d /nonexistent -s /usr/sbin/nologin >/dev/null 2>&1
  fi
}

pkg_symlinkdir()
{
  # Check and create/relink required symlinks/dirs for pkg cache and metadata.
  if [ -d ${PKGCACHE} ]; then
      /bin/rm -r ${PKGCACHE}
      /bin/mkdir -p ${CWDIR}/system/pkg/pkgcache
      /bin/ln -Ffhs ${CWDIR}/system/pkg/pkgcache ${PKGCACHE}
  else
      /bin/mkdir -m 0755 -p /var/cache
      /bin/mkdir -p ${CWDIR}/system/pkg/pkgcache
      /bin/ln -Ffhs ${CWDIR}/system/pkg/pkgcache ${PKGCACHE}
  fi
  if [ -d ${PKGMETA} ]; then
      /bin/rm -r ${PKGMETA}
      /bin/mkdir -p ${CWDIR}/system/pkg/pkgmeta
      /bin/ln -Ffhs ${CWDIR}/system/pkg/pkgmeta ${PKGMETA}
  else
      #/bin/mkdir -m 0755 -p /var/db
      /bin/mkdir -p ${CWDIR}/system/pkg/pkgmeta
      /bin/ln -Ffhs ${CWDIR}/system/pkg/pkgmeta ${PKGMETA}
  fi
}

compat9x_symlinkdir()
{
  # Check and create/relink required symlinks/dirs for compat9x libs.
  if [ ! -d ${COMPAT9XPATH1} ]; then
	  /bin/mkdir -m 0755 -p /usr/local/lib
      /bin/mkdir -p ${CWDIR}/system/compat9x/lib/compat
      /bin/ln -Ffhs ${CWDIR}/system/compat9x/lib/compat ${COMPAT9XPATH1}
  fi
  if [ ! -d ${COMPAT9XPATH2} ]; then
	  /bin/mkdir -m 0755 -p /usr/local/lib32
      /bin/mkdir -p ${CWDIR}/system/compat9x/lib32/compat
      /bin/ln -Ffhs ${CWDIR}/system/compat9x/lib32/compat ${COMPAT9XPATH2}
  fi
  if [ ! -d ${COMPAT9XPATH3} ]; then
	  /bin/mkdir -m 0755 -p /usr/local/libdata
      /bin/mkdir -p ${CWDIR}/system/compat9x/libdata/ldconfig
      /bin/ln -Ffhs ${CWDIR}/system/compat9x/libdata/ldconfig ${COMPAT9XPATH3}
  fi
  if [ ! -d ${COMPAT9XPATH4} ]; then
	  /bin/mkdir -m 0755 -p /usr/local/libdata
      /bin/mkdir -p ${CWDIR}/system/compat9x/libdata/ldconfig32
	  /bin/ln -Ffhs ${CWDIR}/system/compat9x/libdata/ldconfig32 ${COMPAT9XPATH4}
  fi
}

plex_symlinkdir()
{
  # Check and create/relink required symlinks/dirs for plexmediaserver.
  if [ ! -d ${RCDPATH} ]; then
      /bin/mkdir -m 0755 -p ${RCDPATH}
  fi
  if [ ! -d ${PLEXPATH} ]; then
	  /bin/mkdir -p ${CWDIR}/${PRDNAME}
	  /bin/ln -Ffhs ${CWDIR}/${PRDNAME} /usr/local/share
  fi
  if [ ! -d ${CWDIR}/system/rc.d ]; then
	  /bin/mkdir -p ${CWDIR}/system/rc.d
  fi
}

plex_rcparamstart()
{
  # Plex Media Server rc parameters.
  /usr/sbin/sysrc ${CMDNAME}_enable="NO" >/dev/null 2>&1
  /usr/sbin/sysrc ${CMDNAME}_support_path="${SUPPORTPATH}" >/dev/null 2>&1
  /usr/sbin/sysrc ${CMDNAME}_maxplugins="6" >/dev/null 2>&1
  
  # Link plexinit to /usr/local/sbin.
  if [ ! -f /usr/local/sbin/plexinit ]; then
      /bin/ln -fs ${CWDIR}/plexinit /usr/local/sbin
  fi
  
  # Restore current plex rcd if embedded.
  if [ ${PRDPLATFORM} == "x64-embedded" ]; then
      if [ -f ${CWDIR}/system/rc.d/${CMDNAME} ]; then
          /bin/cp ${CWDIR}/system/rc.d/${CMDNAME} ${RCDPATH} || error_notify "Error: A problem has occurred while copying file."
      fi
  fi
  
  # Start Plex Media Server.
  service ${CMDNAME} onestart 2> /dev/null || ${PLEXRCD} onestart
  # Log on startup success.
  if [ $? -eq 0 ]; then
      logger "${SCRIPTNAME}: script has been started successfully"
  fi
}

plex_init()
{
  # Check for system compatibility.
  if [ ! ${PLATFORM} == "amd64" ]; then
      echo "Unsupported platform!"; exit 1
  fi 
  # Check for product compatibility.
  if [ ! ${PRDVERSION} -ge "10" ]; then
      echo "Unsupported version!"; exit 1
  fi
  
  # Function calls.
  plex_usergroup
  platform_check
  product_check
  plex_initial_download
  plex_rcparamstart
}

# Plexinit common control switches.
while getopts ":gsprvuh" option; do
    case ${option} in
      [h]) echo "Usage: ${SCRIPTNAME} -[option]";
      echo "Options:"
      echo "        -s  Start Plex Media Server."
      echo "        -p  Stop Plex Media Server."
      echo "        -r  Restart Plex Media Server."
      echo "        -v  Display product version."
      echo "        -u  Upgrade Plex package."
      echo "        -h  Display this help message."; exit ;;
      [g]) GUISTART=ON;;        #AFS to trigger the GUI related actions (needed for OBI)
      [s]) service ${CMDNAME} onestart 2> /dev/null || ${PLEXRCD} onestart; exit 0 ;;
      [p]) service ${CMDNAME} onestop 2> /dev/null || ${PLEXRCD} onestop; exit 0 ;;
      [r]) service ${CMDNAME} onerestart 2> /dev/null || ${PLEXRCD} onerestart; exit 0 ;;
      [v]) pkg info -I ${COMPATPKG} ${PRDNAME}; exit 0 ;;
      [u]) pkg_upgrade; exit 0 ;;
      [?]) echo "Invalid option, -h for usage."; exit 0 ;;
    esac
done

plex_init
